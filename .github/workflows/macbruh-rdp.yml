name: "🖥️ MACBRUH-RDP Workflow"

on:
  workflow_dispatch:

jobs:
  macbruh_rdp:
    name: "MACBRUH-RDP Session"
    runs-on: windows-latest
    timeout-minutes: 43800

    steps:
    - name: "🛡️ Disable Firewall"
      run: |
        try { Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False }
        catch { Write-Host "Firewall disable failed, continuing..." }

    - name: "🔊 Enable Windows Audio Service"
      run: |
        try {
          Set-Service -Name "Audiosrv" -StartupType Automatic
          Start-Service -Name "Audiosrv"
          Write-Host "✅ Audio service started."
        } catch {
          Write-Warning "Audio service could not be started."
        }

    - name: "🎧 Install VB-Cable (Virtual Audio Device)"
      run: |
        $vcableUrl = "https://download.vb-audio.com/Download_CABLE/VBCABLE_Driver_Pack43.zip"
        $zipPath = "$env:TEMP\VBCABLE.zip"
        $extractPath = "$env:TEMP\VBCABLE"
        Invoke-WebRequest -Uri $vcableUrl -OutFile $zipPath
        Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force
        Start-Process -FilePath "$extractPath\VBCABLE_Setup_x64.exe" -ArgumentList "/S" -Wait

    - name: "📊 System Info & Diagnostics"
      run: |
        Get-ComputerInfo | Out-File C:\Users\$Env:USERNAME\Documents\system-info.txt
        Get-Process | Sort-Object CPU -Descending | Select-Object -First 10 | Out-File C:\Users\$Env:USERNAME\Documents\top-processes.txt

    - name: "⬆️ Upload System Diagnostics"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: "system-diagnostics"
        path: |
          C:\Users\${{ env.USERNAME }}\Documents\system-info.txt
          C:\Users\${{ env.USERNAME }}\Documents\top-processes.txt

    - name: "⬇️ Download and Extract Free Fire Ripper"
      continue-on-error: true
      run: |
        cd C:\Users\$Env:USERNAME\Documents
        try {
          Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download" -OutFile ffripper.zip
          7z x ffripper.zip -y
        } catch {
          Write-Host "Download or extraction failed."
        }

    - name: "🖥️ Start Chrome Remote Desktop"
      continue-on-error: true
      run: |
        $paths = @(
          "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe",
          "${Env:PROGRAMFILES}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        )
        foreach ($path in $paths) {
          if (Test-Path $path) { & $path; return }
        }
        Write-Host "Chrome Remote Desktop's remoting_start_host.exe not found."

    - name: "🗂️ Create Desktop Shortcuts"
      run: |
        $desktop = [Environment]::GetFolderPath("Desktop")
        $links = @(
          @{Target="C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe"; Link="$desktop\Free Fire.lnk"},
          @{Target="C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe"; Link="$desktop\Ninjaripper.lnk"},
          @{Target="C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe"; Link="$desktop\Noesis.lnk"}
        )
        foreach ($l in $links) {
          try {
            if (Test-Path $l.Target) {
              New-Item -ItemType SymbolicLink -Target $l.Target -Path $l.Link -Force
              Write-Host "Shortcut: $($l.Link) -> $($l.Target)"
            }
          } catch {
            Write-Warning "Failed to create shortcut: $($l.Link)"
          }
        }

    - name: "📝 Workflow Summary"
      if: always()
      run: |
        echo "### MACBRUH-RDP Workflow Complete" >> $env:GITHUB_STEP_SUMMARY
        echo "- Audio enabled and VB-Cable installed" >> $env:GITHUB_STEP_SUMMARY
        echo "- System diagnostics uploaded" >> $env:GITHUB_STEP_SUMMARY
        echo "- Free Fire Ripper downloaded (if possible)" >> $env:GITHUB_STEP_SUMMARY
        echo "- Desktop shortcuts created (if targets exist)" >> $env:GITHUB_STEP_SUMMARY
